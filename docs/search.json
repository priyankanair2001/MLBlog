[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Priya Nair’s Machine Learning Blog",
    "section": "",
    "text": "Precision-Recall Curves\n\n\n\n\n\n\n\nClassification\n\n\n\n\n\n\n\n\n\n\n\nNov 13, 2023\n\n\nPriyanka Nair\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nNov 4, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Precision-Recall Curves",
    "section": "",
    "text": "Hello! In this blog post, I will be teaching you about precision-recall curves. A precision-recall curve can help us measure the quality of our model. So you may be wondering… what exactly are precision and recall?\nPrecision: true positives / all positives\nRemember, all positives are true positives + false positives\nRecall: true positives / (true positives + false negatives)\nSo, you can think of precision as measuring how many selected items were relevant, and recall as how many relevant items are selected.\nPrecision and recall trade off. Increased precision leads to decreased recall and increased recall leads to decreased precision.\nNow, I will explain something really important: how do we read a graph with a precision-recall curve?\nBasically, we want both precision and recall to be as high as possible. Since precision is on the y-axis and recall is on the x-axis, the higher the points are on the graph, the more precision they indicate, and the farther right the points are, the more recall they indicate. Therefore, we want our curve to be as close to the top right corner of the graph as possible. As a result, the area under the curve should also be as high as possible.\nTo illustrate how precision-recall curves are used, I will provide an example.\nA precision-recall curve can be very useful in the real world, especially in the medical field for detecting illnesses such as breast cancer. Here, we will use sklearn’s breast cancer dataset, where a tumor will be classified as either malignant (1) or benign (0). As usual, our PR-curve will show us how good our model is.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import precision_recall_curve, auc\n\n# Load the Breast Cancer dataset\ncancer = load_breast_cancer()\nX = cancer.data\ny = cancer.target  # 1 if malignant, 0 if benign\n\n# Split the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Train a logistic regression model\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\n\n# Predict probabilities on the test set\ny_scores = model.predict_proba(X_test)[:, 1]\n\n# Calculate precision and recall\nprecision, recall, thresholds = precision_recall_curve(y_test, y_scores)\n\n# Calculate the area under the precision-recall curve\nauc_score = auc(recall, precision)\n\n# Plot the precision-recall curve\nplt.figure(figsize=(8, 6))\nplt.plot(recall, precision, color='purple', label=f'PR Curve (AUC = {auc_score:.2f})')\nplt.xlabel('Recall')\nplt.ylabel('Precision')\nplt.title('Precision-Recall Curve for Breast Cancer Classification')\nplt.legend()\nplt.show()\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/sklearn/linear_model/_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\nPlease also refer to the documentation for alternative solver options:\n    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n  n_iter_i = _check_optimize_result("
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello, my name is Priyanka Nair, but you can call me Priya. I graduated from Virginia Tech with a Bachelor’s in Computer Science in May 2023. I am currently working towards my Master’s in Computer Science. This blog is to showcase what I’ve learned in my Machine Learning class. My favorite color is (obviously) purple."
  }
]