{
  "hash": "551f97e5efc176227c1c2f17f63deb72",
  "result": {
    "markdown": "---\ntitle: \"K-Means Clustering\"\nauthor: \"Priyanka Nair\"\ndate: \"2023-12-02\"\ncategories: [Clustering]\n---\n\nHello, in this blog post, we will be discussing k-means clustering. The idea behind k-means is to group similar data points together into a predefined number of clusters. You can tell which points are more or less similar to each other depending on how far apart they are. As you may have guessed, the closer the data points are to each other, the more similar they are.\n\nEach data point can be thought of as a point on a graph, such that you can use the distance formula to find out how far apart two points are from one another.\n\n\"Centroids\" are the center of each cluster. It is not a data point.\n\nThe way this algorithm works is that initially, a number of centroids will be assigned. Then, each data point will be assigned a centroid. After that, the centroid will shift it's position to the middle of all the data points that got assigned to it. This new centroid position can be calculated by finding the mean position of the data points that got assigned to it. Then, the data points will be reassigned to the centroid that it is now closest to. This process will keep iterating until the data points stop getting assigned to a different centroid and the centroids stop shifting.\n\nEven though with our own eyes we can likely distinguish different clusters in a dataset, the point of K-means clustering is for a computer to do that. The first step is to identify the number of clusters we want in our data. This is the \"K\" in K-means clustering.\n\nSometimes, even when the centroid-shifting iteration process ends, it is possible that we may end up with clusters that do not match what our eyes would tell us. We can assess the quality of the clustering by adding up the variation within each cluster. Variance is a statistical measure that quantifies the degree of spread or dispersion in a set of data points. Since K-means can't see the clustering the way we don't, it keeps track of the variance and starts the whole process over with different starting points.\n\nAfter K-means has created clusters, it will choose the cluster with the best variance.\n\nWhen selecting the value for K, there are different methods. One method is trial and error. After trying a few different values for K, we can identify the best one by looking at the total variations and seeing which number has the highest total variation.\n\nIt is important to note that even when K-means has reach its ideal values, it may not stop iterating until it's \"sure\".\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Import necessary libraries\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nfrom sklearn.datasets import make_blobs\n\n# Create synthetic data with three clusters\nX, y = make_blobs(n_samples=300, centers=3, random_state=42, cluster_std=1.0)\n\n# Visualize the data\nplt.scatter(X[:, 0], X[:, 1], c='purple', s=30, cmap='viridis')\nplt.title(\"Synthetic Data with 3 Clusters\")\nplt.xlabel(\"Feature 1\")\nplt.ylabel(\"Feature 2\")\nplt.show()\n\n# Apply K-means clustering with k=3\nkmeans = KMeans(n_clusters=3, random_state=42)\nkmeans.fit(X)\n\n# Get cluster centers and labels\ncenters = kmeans.cluster_centers_\nlabels = kmeans.labels_\n\n# Visualize the clustered data\nplt.scatter(X[:, 0], X[:, 1], c=labels, s=30, cmap='viridis')\nplt.scatter(centers[:, 0], centers[:, 1], c='red', marker='X', s=200, label='Centroids')\nplt.title(\"K-means Clustering\")\nplt.xlabel(\"Feature 1\")\nplt.ylabel(\"Feature 2\")\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=596 height=449}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-2.png){width=596 height=449}\n:::\n:::\n\n\nIn this example, we can see data points that in our eyes are clearly belonging to three different clusters. However, the computer does not know that and has to go through the steps to identify the centroids shown in the bottom graph.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}